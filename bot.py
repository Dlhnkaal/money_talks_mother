from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio
from config import BOT_TOKEN, CHANNEL_USERNAME
from payment import create_payment

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π üöÄ")

@dp.message(Command("create_giveaway"))
async def cmd_create_giveaway(message: types.Message):
    await message.answer("–ü–æ–∫–∞ —Å–æ–∑–¥–∞—ë–º –≤—Ä—É—á–Ω—É—é (–≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ –¥–æ–±–∞–≤–∏–º —Ñ–æ—Ä–º—É).")

@dp.message(Command("post_giveaway"))
async def cmd_post_giveaway(message: types.Message):
    kb = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data="join_giveaway")]
    ])
    await bot.send_message(chat_id=CHANNEL_USERNAME, text="üéÅ –ù–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à! –ñ–º–∏ '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å' üëá", reply_markup=kb)

@dp.callback_query(lambda c: c.data == "join_giveaway")
async def process_join(call: types.CallbackQuery):
    amount = 500  # —Ç–µ—Å—Ç–æ–≤–∞—è —Å—É–º–º–∞
    payment = create_payment(amount, call.from_user.id)
    url = payment.confirmation.confirmation_url
    await bot.send_message(chat_id=call.from_user.id, text=f"–û–ø–ª–∞—Ç–∏ —É—á–∞—Å—Ç–∏–µ: {url}")

    await call.answer()

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
async def start_bot():
    asyncio.create_task(main())  # —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è main()

    # –§–∏–∫—Ç–∏–≤–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
    async def handle(request):
        return web.Response(text="Bot is running!")

    app = web.Application()
    app.router.add_get("/", handle)

    port = int(os.environ.get("PORT", 10000))  # Render –∑–∞–¥–∞—Å—Ç PORT, –∏–Ω–∞—á–µ 10000
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

    print(f"‚úÖ Web server started on port {port}")

    while True:
        await asyncio.sleep(3600)  # —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(start_bot())

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    asyncio.run(dp.start_polling(bot))
